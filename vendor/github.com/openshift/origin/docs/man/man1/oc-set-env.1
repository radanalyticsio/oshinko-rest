.TH "OC SET" "1" " Openshift CLI User Manuals" "Openshift" "June 2016"  ""


.SH NAME
.PP
oc set env \- Update environment variables on a pod template


.SH SYNOPSIS
.PP
\fBoc set env\fP [OPTIONS]


.SH DESCRIPTION
.PP
Update environment variables on a pod template or a build config

.PP
List environment variable definitions in one or more pods, pod templates or build
configuration.
Add, update, or remove container environment variable definitions in one or
more pod templates (within replication controllers or deployment configurations) or
build configurations.
View or modify the environment variable definitions on all containers in the
specified pods or pod templates, or just those that match a wildcard.

.PP
If "\-\-env \-" is passed, environment variables can be read from STDIN using the standard env
syntax.


.SH OPTIONS
.PP
\fB\-\-all\fP=false
    Select all resources in the namespace of the specified resource types

.PP
\fB\-c\fP, \fB\-\-containers\fP="*"
    The names of containers in the selected pod templates to change \- may use wildcards

.PP
\fB\-e\fP, \fB\-\-env\fP=[]
    Specify key value pairs of environment variables to set into each container.

.PP
\fB\-f\fP, \fB\-\-filename\fP=[]
    Filename, directory, or URL to file to use to edit the resource.

.PP
\fB\-\-from\fP=""
    The name of a resource from which to inject enviroment variables

.PP
\fB\-\-list\fP=false
    Display the environment and any changes in the standard format

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Display the changed objects instead of updating them. One of: json|yaml.

.PP
\fB\-\-output\-version\fP=""
    Output the changed objects with the given version (default api\-version).

.PP
\fB\-\-overwrite\fP=true
    If true, allow environment to be overwritten, otherwise reject updates that overwrite existing environment.

.PP
\fB\-\-prefix\fP=""
    Prefix to append to variable names

.PP
\fB\-\-resolve\fP=false
    Show secret or configmap references when listing variables

.PP
\fB\-\-resource\-version\fP=""
    If non\-empty, the labels update will only succeed if this is the current resource\-version for the object. Only valid when specifying a single resource.

.PP
\fB\-l\fP, \fB\-\-selector\fP=""
    Selector (label query) to filter on


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-api\-version\fP=""
    DEPRECATED: The API version to use when talking to the server

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation.

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert. file for the certificate authority.

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS.

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS.

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-config\fP=""
    Path to the config file to use for CLI requests.

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-google\-json\-key\fP=""
    The Google Cloud Platform Service Account JSON Key to use for authentication.

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure.

.PP
\fB\-\-log\-flush\-frequency\fP=0
    Maximum number of seconds between log flushes

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request.

.PP
\fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server.

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use


.SH EXAMPLE
.PP
.RS

.nf
  # Update deployment 'registry' with a new environment variable
  oc set env dc/registry STORAGE\_DIR=/local

  # List the environment variables defined on a build config 'sample\-build'
  oc set env bc/sample\-build \-\-list

  # List the environment variables defined on all pods
  oc set env pods \-\-all \-\-list

  # Output modified build config in YAML, and does not alter the object on the server
  oc set env bc/sample\-build STORAGE\_DIR=/data \-o yaml

  # Update all containers in all replication controllers in the project to have ENV=prod
  oc set env rc \-\-all ENV=prod

  # Import environment from a secret
  oc set env \-\-from=secret/mysecret dc/myapp

  # Import environment from a config map with a prefix
  oc set env \-\-from=configmap/myconfigmap \-\-prefix=MYSQL\_ dc/myapp

  # Remove the environment variable ENV from container 'c1' in all deployment configs
  oc set env dc \-\-all \-\-containers="c1" ENV\-

  # Remove the environment variable ENV from a deployment config definition on disk and
  # update the deployment config on the server
  oc set env \-f dc.json ENV\-

  # Set some of the local shell environment into a deployment config on the server
  env | grep RAILS\_ | oc set env \-e \- dc/registry

.fi
.RE


.SH SEE ALSO
.PP
\fBoc\-set(1)\fP,


.SH HISTORY
.PP
June 2016, Ported from the Kubernetes man\-doc generator
