.TH "OPENSHIFT CLI" "1" " Openshift CLI User Manuals" "Openshift" "June 2016"  ""


.SH NAME
.PP
openshift cli create \- Create a resource by filename or stdin


.SH SYNOPSIS
.PP
\fBopenshift cli create\fP [OPTIONS]


.SH DESCRIPTION
.PP
Create a resource by filename or stdin

.PP
JSON and YAML formats are accepted.


.SH OPTIONS
.PP
\fB\-f\fP, \fB\-\-filename\fP=[]
    Filename, directory, or URL to file to use to create the resource

.PP
\fB\-\-include\-extended\-apis\fP=true
    If true, include definitions of new APIs via calls to the API server. [default true]

.PP
\fB\-o\fP, \fB\-\-output\fP=""
    Output mode. Use "\-o name" for shorter output (resource/name).

.PP
\fB\-\-record\fP=false
    Record current kubectl command in the resource annotation. If set to false, do not record the command. If set to true, record the command. If not set, default to updating the existing annotation value only if one already exists.

.PP
\fB\-R\fP, \fB\-\-recursive\fP=false
    Process the directory used in \-f, \-\-filename recursively. Useful when you want to manage related manifests organized within the same directory.

.PP
\fB\-\-save\-config\fP=false
    If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future.

.PP
\fB\-\-schema\-cache\-dir\fP="\~/.kube/schema"
    If non\-empty, load/store cached API schemas in this directory, default is '$HOME/.kube/schema'

.PP
\fB\-\-validate\fP=false
    If true, use a schema to validate the input before sending it


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-api\-version\fP=""
    DEPRECATED: The API version to use when talking to the server

.PP
\fB\-\-as\fP=""
    Username to impersonate for the operation.

.PP
\fB\-\-certificate\-authority\fP=""
    Path to a cert. file for the certificate authority.

.PP
\fB\-\-client\-certificate\fP=""
    Path to a client certificate file for TLS.

.PP
\fB\-\-client\-key\fP=""
    Path to a client key file for TLS.

.PP
\fB\-\-cluster\fP=""
    The name of the kubeconfig cluster to use

.PP
\fB\-\-config\fP=""
    Path to the config file to use for CLI requests.

.PP
\fB\-\-context\fP=""
    The name of the kubeconfig context to use

.PP
\fB\-\-google\-json\-key\fP=""
    The Google Cloud Platform Service Account JSON Key to use for authentication.

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP=false
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure.

.PP
\fB\-\-log\-flush\-frequency\fP=0
    Maximum number of seconds between log flushes

.PP
\fB\-\-match\-server\-version\fP=false
    Require server version to match client version

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
    If present, the namespace scope for this CLI request.

.PP
\fB\-\-server\fP=""
    The address and port of the Kubernetes API server

.PP
\fB\-\-token\fP=""
    Bearer token for authentication to the API server.

.PP
\fB\-\-user\fP=""
    The name of the kubeconfig user to use


.SH EXAMPLE
.PP
.RS

.nf
  # Create a pod using the data in pod.json.
  openshift cli create \-f pod.json
  
  # Create a pod based on the JSON passed into stdin.
  cat pod.json | openshift cli create \-f \-

.fi
.RE


.SH SEE ALSO
.PP
\fBopenshift\-cli(1)\fP, \fBopenshift\-cli\-create\-clusterresourcequota(1)\fP, \fBopenshift\-cli\-create\-configmap(1)\fP, \fBopenshift\-cli\-create\-deploymentconfig(1)\fP, \fBopenshift\-cli\-create\-identity(1)\fP, \fBopenshift\-cli\-create\-imagestream(1)\fP, \fBopenshift\-cli\-create\-namespace(1)\fP, \fBopenshift\-cli\-create\-policybinding(1)\fP, \fBopenshift\-cli\-create\-quota(1)\fP, \fBopenshift\-cli\-create\-route(1)\fP, \fBopenshift\-cli\-create\-secret(1)\fP, \fBopenshift\-cli\-create\-serviceaccount(1)\fP, \fBopenshift\-cli\-create\-user(1)\fP, \fBopenshift\-cli\-create\-useridentitymapping(1)\fP,


.SH HISTORY
.PP
June 2016, Ported from the Kubernetes man\-doc generator
